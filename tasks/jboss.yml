---
- name: Install unzip (yum)
  yum: name={{ item }} state=present
  when: ansible_os_family == 'RedHat'
  with_items:
   - unzip

- name: Install unzip (apt)
  apt: pkg={{ item }} state=present update_cache=yes
  when: ansible_os_family == 'Debian'
  with_items:
   - unzip

- name: Check for java 7 install
  shell: java -version
  register: java7_installed
  ignore_errors: yes

- debug: var=java7_installed

- include: java.yml
  when: '"java version \"1.7" not in java7_installed.stderr'

- name: Create directory for Jboss build
  file: path={{jboss_base_dir}} state=directory mode=0755

- name: Download JBoss from jboss.org
  get_url: url={{ jboss_url }} dest=/tmp/{{ jboss_archive }}

- name: Extract archive
  unarchive: src=/tmp/{{ jboss_archive }} dest={{ jboss_base_dir }} copy=no creates={{jboss_base_dir}}/{{jboss_archive_extracted}}

- name: Copying standalone.xml configuration file
  template: src=standalone.xml dest={{ jboss_base_dir }}/{{jboss_archive_extracted}}/standalone/configuration/
  notify: restart jboss

- name: Add group "{{ jboss_group }}"
  group: name={{ jboss_group }}

- name: Add user "{{ jboss_owner }}"
  user: name={{ jboss_owner }} group={{ jboss_group }} home={{ jboss_base_dir }} shell={{ jboss_shell }} comment="Jboss User"

- name: Change ownership of JBoss installation
  file: path={{ jboss_base_dir }}/ owner={{ jboss_owner }} group={{ jboss_group }} state=directory recurse=yes

- name: Copy the init script
  template: src=jboss-as-standalone-{{ ansible_distribution }}-{{ ansible_architecture }}.sh dest=/etc/init.d/jboss mode=0755

- name: Enable JBoss to be started at boot
  service: name=jboss enabled=yes state=started

#- name: deploy iptables rules
##  template: src=iptables-save dest=/etc/sysconfig/iptables
##  notify: restart iptables
